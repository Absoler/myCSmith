#! /bin/bash
gcc_checks=(
    /home/patcher/loadMatchPatterns/arithmetic_gcc/div.cocci
    /home/patcher/loadMatchPatterns/delayAssign_gcc/assignExprAsArg.cocci
    /home/patcher/loadMatchPatterns/delayAssign_gcc/simpleReturn.cocci
    /home/patcher/loadMatchPatterns/delayAssign_gcc/struct_assign_and_if.cocci
    /home/patcher/loadMatchPatterns/delayAssign_gcc/struct_useAfterAssign.cocci
    /home/patcher/loadMatchPatterns/ifMultiCmp_gcc/separate_storeAndUse.cocci
    /home/patcher/loadMatchPatterns/ifMultiCmp_gcc/together_storeAndUse.cocci
    /home/patcher/loadMatchPatterns/ifMultiCmp_gcc/CompareExpr.cocci
    /home/patcher/loadMatchPatterns/ifMultiCmp_gcc/assign_struct_and_use.cocci
    /home/patcher/loadMatchPatterns/ifMultiCmp_gcc/decl_union_return.cocci
    /home/patcher/loadMatchPatterns/ifMultiCmp_gcc/one_assign_and_other.cocci
    /home/patcher/loadMatchPatterns/ifMultiCmp_gcc/one_assign_and_return.cocci
    /home/patcher/loadMatchPatterns/ifMultiCmp_gcc/Assign_with_logic.cocci
    /home/patcher/loadMatchPatterns/ifRefresh_gcc/union_assign.cocci
    /home/patcher/loadMatchPatterns/ifRefresh_gcc/parm_deref_assign.cocci
    /home/patcher/loadMatchPatterns/loadInAdvance/ifReturn.cocci
    /home/patcher/loadMatchPatterns/return_gcc/load_retVal_inAdvance.cocci
    /home/patcher/loadMatchPatterns/structArg_gcc/structArg.cocci
    /home/patcher/loadMatchPatterns/structDup_gcc/assign_and_use.cocci
    /home/patcher/loadMatchPatterns/structDup_gcc/consecutive_assign.cocci
)
icc_checks=(
    arithmetic_icc.cocci 
    delayAssign_icc.cocci 
)

test_checks=(
    /home/patcher/storeTestPatterns/onceMore_in_for.cocci
    /home/patcher/storeTestPatterns/assignConstUnion.cocci
    /home/patcher/storeTestPatterns/complexExpr.cocci
)

> matched.out
> unmatched.out
> timeout.out

files=(`ls ../patterns/ | grep "\.c"`)
boring=(`cat boring | sed 's/[^0-9]//g'`)
# files=(`cat ../tmp/unreduce`)
matched=()
unmatched=()
sum=${#files[*]}

# ----------------------------------------
#   args[1]: not 0 means add binary check
#
#
# ----------------------------------------

default_option=

if [ $# -ge 1 ] ; then
    add_binary_check=$1
else
    add_binary_check=0
fi

for file in ${files[*]} ; do
# file=2677_gcc-12.1_output.c
    echo $file
    num=${file%%_*}
    if [[ ${boring[*]} =~ $num ]] ; then
        continue
    fi

    # ./judgeC.kb ../patterns/$file
    # if [ $? -ne 0 ] ; then 
    #     continue
    # fi

    if [[ $file =~ "gcc" ]] ; then
        trigger_patterns=() # length == 0, means no match
        for check in ${gcc_checks[*]} ; do
            match=0
            echo \>check $check
            res=`timeout 2s spatch -sp_file $check ../patterns/$file -o tmp.c --no-includes`
            if [ $? -eq 124 ] ; then
                echo $check $file >> timeout.out
            fi
            if [ -n "$res" ] ; then
                # echo $check $file >> matched.out
                match=1
            fi

            # add extra checker using descript file
            check_name=${check##*/}
            check_name=${check_name%.cocci}
            desc_val=`cat ./needDescriptCheck.json | jq -r .$check_name` 
            if [ $match -eq 1 ] && [ "$desc_val" != "None" ] && [ -f ../problem/${file%_*}_descript.out ] ; then
                ./check_desc.py ../problem/${file%_*}_descript.out $desc_val
                if [ $? -eq 0 ] ; then
                    match=0
                fi
            fi

            if [ $match -eq 1 -a $add_binary_check -ne 0 ] ; then
                compiler=${file%_*}
                compiler=${compiler#*_}
                # echo $compiler
                if [ ! -d "./test" ] ; then
                    mkdir test
                fi
                cp ../patterns/$file test/output2.c
                $compiler test/output2.c $default_option -g -o test/output2
                python3 /home/patcher/tool.py test/output2.c $check > test/output2.json
                python3 /home/DFchecker/checker.py test/output2 test/output2.json
                if [ $? -eq 0 ] ; then
                    match=0
                fi
            fi

            if [ $match -eq 1 ] ; then
                echo $check trigger $file
                trigger_patterns=(${trigger_patterns[*]} $check)
            fi

        done
        

        if [ ${#trigger_patterns[*]} -eq 0 ] ; then
            unmatched[${#unmatched[*]}]=$file
            echo $file >> unmatched.out
        else
            for pattern in ${trigger_patterns[*]} ; do
                echo $pattern $file >> matched.out
            done
            matched[${#matched[*]}]=$file
        fi

    fi
    
    if [[ $file =~ "icc" ]] ; then
        continue
        match=0
        for check in ${icc_checks[*]} ; do
            echo \>check $check
            res=`timeout 2s spatch -sp_file $check ../patterns/$file -o tmp.c `
            if [ $? -eq 124 ] ; then
                echo $check $file >> timeout.out
            fi
            if [ -n "$res" ] ; then
                matched[${#matched[*]}]=$file
                echo $check $file >> matched.out
                match=1
            fi
        done
        if [ $match -eq 0 ] ; then
            unmatched[${#unmatched[*]}]=$file
            echo $file >> unmatched.out
        else
            matched[${#matched[*]}]=$file
        fi
    fi
done
echo matched ${#matched[*]} / $sum
echo matched ${#matched[*]} / $sum >> matched.out
