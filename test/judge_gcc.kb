#! /bin/bash

#-----
#   this script is used to judge whether target.c will 
#   introduce an additional load on gcc
#   
#   args[1] is the compiler we use
#
#-----

root_dir=/home/csmith_store
opt_option=-O2
pin_root=/home/pin-3.21-98484-ge7cd811fd-gcc-linux/
test_type=1

> full.c

cat $root_dir/test/define.c >> full.c
cat target.c >> full.c
cat $root_dir/test/main.c >> full.c

compiler=gcc-12.1

$compiler full.c -g $opt_option -o full >/dev/null 2>info
compile_stat=$?
if [ $compile_stat -ne 0 ]; then
    # echo "fail due to compilation error: " $compile_stat >> $root_dir/reduce.log
    exit 1
fi

# avoid loss of return type, which lead to failure of coccinelle's analysis
s=`cat info | grep "return type defaults to"`
if [ -n "$s" ] ; then
    exit 1
fi

timeout -s SIGTERM 5s $pin_root/pin -t $root_dir/checkAccess/obj-intel64/checkAccess.so -- ./full $test_type func 1>/dev/null 1>&2
run_stat=$?
if [ $run_stat -ne 0 ]; then
    # echo "runtime problem maybe " $run_stat >> $root_dir/reduce.log
    exit 1
fi
# awk -F ' ' '/g_[0-9]+:/{print $1}' checkAccess.out > vars.out
# diff vars.out $root_dir/test/vars.out
$root_dir/test/compare.py ./descript.out $root_dir/test/descript.old
if [ $? -ne 0 ] ; then
    exit 1
fi
read line < ./result.out
if [ $line == 1 ] ; then
    exit 0
fi
exit 1